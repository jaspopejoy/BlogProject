@using Microsoft.AspNetCore.Identity
@using BlogProject.Services
@using BlogProject.Enums
@using Newtonsoft.Json

@model BlogProject.Models.Post

@inject UserManager<BlogUser> userManager
@inject IImageService imageService
@{
    ViewData["Title"] = "Details";
}

<!-- Post Content-->
<article class="mb-4">
    <div class="container px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                @Html.Raw(Model.Content)
            </div>
        </div>
    </div>
</article>

<hr />
<article>
    <div class="row">
        <div class="col text-center font-weight-bold h3">
            Custom Post Tags
        </div>
    </div>
    <div class="row">
        <div class="col text-center">
            @foreach (var tag in Model.Tags)
            {
                <a class="btn btn-warning btn-ms btn-outline-dark" asp-action="TagIndex" asp-route-tag="@tag.Text.ToLower()">#@tag.Text</a>
            }
        </div>
    </div>
</article>
<hr />

<div>
    @if (User.Identity.IsAuthenticated)
    {
        <form asp-action="Create" asp-controller="Comments" method="post">
            @Html.Hidden("PostId", Model.Id)

            <div class="form-group">
                <label class="h2 custom-control-label font-weight-bold">Add Comment</label>
                <textarea name="body" class="form-control" rows="10"></textarea>
            </div>

            <button type="submit" class="btn btn-dark btn-block btn-sm">Submit</button>
        </form>
    }
    else
    {
        <a class="btn btn-block btn-sm btn-dark" asp-area="Identity" asp-page="/Account/Login">Login to add comments</a>
    }
</div>

<hr />

<button id="commentSection" class="btn btn-sm btn-dark btn-block">@Model.Comments.Count COMMENT(S)</button>

@{
    var counter = 0;}
@foreach (var comment in Model.Comments)
{
    <div class="media border-danger p-3 m-2 bg-light">
        <img class="mr-3 mt-3 rounded-circle" style="width:60px;" src="@imageService.DecodeImage(comment.BlogUser.ImageData, comment.BlogUser.ContentType)" />
        <div class="media-body">
            <h4>@comment.BlogUser.FullName</h4>
            <small>
                <i>
                    @if (comment.Moderated is not null)
                    {
                        <span class="small">
                            <span class="font-weight-bolder">
                                Moderated <span class="text-danger font-italic">(@comment.ModerationType.ToString().ToLower())</span>
                            </span>
                            : @comment.Moderated?.ToString("MMM dd, yyyy")
                        </span>
                    }
                    else
                    {
                        <span class="small font-italic">Posted : @comment.Created.ToString("MMM dd,yyyy")</span>
                    }
                </i>
            </small>
            
            @if (string.IsNullOrEmpty(comment.Body))
            {
                <span class="small font-italic">Comment not available...</span>
            }
            else if (comment.Moderated is not null)
            {
                <p>@comment.ModeratedBody</p>
            }
            else if(comment.Deleted is null)
            {
                <p>@comment.Body</p>
            }

            @if (comment.Moderated is null && comment.Deleted is null && comment.BlogUserId == userManager.GetUserId(User))
            {
                <hr />
                <button data-toggle="modal" data-target="#editModal" class="btn btn-rounded btn-dark float-end font-weight-bold">EDIT</button>
            }

            @if (User.IsInRole(BlogRole.Moderator.ToString()) && comment.Deleted is null)
            {
                <hr />
                <div class="row">
                    <div class="col-2">
                        <button class="btn btn-dark font-weight-bold btn-block" data-toggle="modal" data-target="@($"#moderateModal{counter}")">MODERATE</button>
                    </div>
                    <div class="col-2">
                        <form asp-action="Delete" asp-controller="Comments">
                            @Html.Hidden("Id", comment.Id)
                            @Html.Hidden("Slug", comment.Post.Slug)
                            <button class="btn btn-dark font-weight-bold btn-block">DELETE</button>
                        </form>
                    </div>
                </div>
            }

        </div>
    </div>

    @*Modals*@
    <div class="modal" id="editModal")">
        <div class="modal-dialog">
            <div class="modal-content">

                <!--Modal Header-->
                <div class="modal-header">
                    <h4 class="modal-title">Editing Comment...</h4>

                </div>

                <!--Modal Body-->
                <div class="modal-body">
                    <form asp-action="Edit" asp-controller="Comments">
                        @Html.Hidden("Id", comment.Id)

                        <div class="form-group">
                            <textarea name="Body" class="form-control" required>@comment.Body</textarea>
                        </div>

                        <button class="btn-sm btn-dark border-success font-weight-bold" type="submit">SUBMIT</button>
                    </form>
                </div>

                <!--Modal footer-->
                <div class="modal-footer">
                    <button type="button" class="btn-sm btn-dark font-weight-bold" data-dismiss="modal">CLOSE</button>
                </div>

            </div>
        </div>
    </div>

    <div class="modal" id="@($"moderateModal{counter}")">
        <div class="modal-dialog">
            <div class="modal-content">

                <!--Modal header-->
                <div class="modal-header">
                    <h4 class="modal-title">Moderating Comment...</h4>
                </div>

                <!--Modal Body-->
                <div class="modal-body">
                    <form asp-action="Moderate" asp-controller="Comments">
                        @Html.Hidden("Id", comment.Id)
                        @Html.Hidden("Body", comment.Body)

                        <div class="corm-group">
                            <label class="control-label">Origional Comment</label>
                            <textarea disabled class="form-control" style="resize:none">@comment.Body</textarea>
                        </div>

                        <div class="form-group">
                            <label class="control-label">Moderated Comment</label>
                            <textarea required name="ModeratedBody" class="form-control">@comment.ModeratedBody</textarea>
                        </div>

                        <div class="form-group">
                            <label class="control-label">Reason For Moderation</label>
                            <select class="form-control" asp-for="@comment.ModerationType" name="ModerationType" asp-items="Html.GetEnumSelectList<ModerationType>()"></select>
                        </div>

                        <div class="form-group">
                            <div class="row">
                                <div class="col">
                                    <button class="btn btn-block btn-dark border-success font-weightbold" type="submit">SUBMIT</button>
                                </div>
                                <div class="col">
                                    <button class="btn btn-block btn-dark font-weight-bold" type="button" data-dismiss="modal">CLOSE</button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    counter++;
}


