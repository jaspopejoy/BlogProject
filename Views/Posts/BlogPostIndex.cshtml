@using BlogProject.Models
@using BlogProject.Services
@using BlogProject.Enums
@using BlogProject.ViewModels;
@using Microsoft.AspNetCore.Identity;
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common



@inject UserManager<BlogUser> userManager
@inject IImageService imageService

@model IPagedList<Post>

<div class="row">
    @foreach (var post in Model)
    {
        //Is the logged in user the Author of this post??
        var isAuthor = false;
        if (User.Identity.IsAuthenticated)
        {
            isAuthor = (post.BlogUserId == userManager.GetUserId(User));
        }

        <div class="col-sm-12 col-md-6 mt-2">
            <!-- Blog post-->
            <div class="card mb-4">
                <img class="card-img-top" src="@imageService.DecodeImage(post.ImageData, post.ContentType)" />
                <div class="card-body">
                    <span class="small">
                        <span class="font-weight-bolder">Created </span> : @post.Created.ToString("MMM dd, yyyy")
                    </span>
                    <h2 class="card-title h4">@post.Title</h2>
                    <p class="card-text">@post.Abstract</p>
                    <div class="row">
                        <div class="col-3">
                            <a class="btn btn-dark mb-2" asp-action="Details" asp-controller="Posts" asp-route-slug="@post.Slug">Read More</a>
                        </div>
                        @if (User.IsInRole(BlogRole.Administrator.ToString()) || isAuthor)
                        {
                            <div class="col-3">
                                <a class="btn btn-dark" asp-action="Edit" asp-controller="Posts" asp-route-id="@post.Id">Edit Post</a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>    
    }
</div>

<hr />

<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>
<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("BlogPostIndex", new { id = Model.FirstOrDefault().BlogId, page = page }),
        new PagedListRenderOptions
        {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
        })
    </div>
</div>